// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generateSwagger should generate swagger 1`] = `
{
  "basePath": "/",
  "definitions": {
    "BadRequestError": {
      "description": "Provided input is invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 400,
              "title": "Bad input request",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "NotFoundError": {
      "description": "Not Found",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 404,
              "title": "Not Found",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 401,
              "title": "Authentication information is missing or invalid",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnknownError": {
      "description": "Unknown error",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 500,
              "title": "Unknown error",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "testResult": {
      "properties": {
        "test": {
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "host": "",
  "info": {
    "contact": {
      "email": "developers@shopbonsai.ca",
    },
    "description": "The API is documented here",
    "title": "Default swagger title",
    "version": "1.0",
  },
  "paths": {
    "/test": {
      "get": {
        "parameters": [],
        "produces": [
          "application/json",
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/testResult",
            },
          },
          "400": {
            "description": "400 - Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequestError",
            },
          },
          "401": {
            "description": "401 - Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError",
            },
          },
          "404": {
            "description": "404 - Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError",
            },
          },
          "5XX": {
            "description": "500 - Unknown error",
            "schema": {
              "$ref": "#/definitions/UnknownError",
            },
          },
        },
        "tags": [],
      },
    },
  },
  "schemes": [
    "http",
  ],
  "swagger": "2.0",
}
`;

exports[`generateSwagger should generate swagger for multiple paths with different responses 1`] = `
{
  "basePath": "/",
  "definitions": {
    "BadRequestError": {
      "description": "Provided input is invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 400,
              "title": "Bad input request",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "NotFoundError": {
      "description": "Not Found",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 404,
              "title": "Not Found",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 401,
              "title": "Authentication information is missing or invalid",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnknownError": {
      "description": "Unknown error",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 500,
              "title": "Unknown error",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "test2Result": {
      "properties": {
        "test": {
          "example": "test2",
          "type": "string",
        },
      },
      "type": "object",
    },
    "testResult": {
      "properties": {
        "test": {
          "example": "test",
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "host": "",
  "info": {
    "contact": {
      "email": "developers@shopbonsai.ca",
    },
    "description": "The API is documented here",
    "title": "Default swagger title",
    "version": "1.0",
  },
  "paths": {
    "/test": {
      "get": {
        "parameters": [
          {
            "example": "test",
            "in": "query",
            "name": "test",
            "required": false,
            "type": "string",
          },
        ],
        "produces": [
          "application/json",
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/testResult",
            },
          },
          "400": {
            "description": "400 - Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequestError",
            },
          },
          "401": {
            "description": "401 - Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError",
            },
          },
          "404": {
            "description": "404 - Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError",
            },
          },
          "5XX": {
            "description": "500 - Unknown error",
            "schema": {
              "$ref": "#/definitions/UnknownError",
            },
          },
        },
        "tags": [],
      },
    },
    "/test2": {
      "get": {
        "parameters": [
          {
            "example": "test2",
            "in": "query",
            "name": "test",
            "required": false,
            "type": "string",
          },
        ],
        "produces": [
          "application/json",
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/test2Result",
            },
          },
          "400": {
            "description": "400 - Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequestError",
            },
          },
          "401": {
            "description": "401 - Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError",
            },
          },
          "404": {
            "description": "404 - Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError",
            },
          },
          "5XX": {
            "description": "500 - Unknown error",
            "schema": {
              "$ref": "#/definitions/UnknownError",
            },
          },
        },
        "tags": [],
      },
    },
  },
  "schemes": [
    "http",
  ],
  "swagger": "2.0",
}
`;

exports[`generateSwagger should generate swagger for the same path with different methods 1`] = `
{
  "basePath": "/",
  "definitions": {
    "BadRequestError": {
      "description": "Provided input is invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 400,
              "title": "Bad input request",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "NotFoundError": {
      "description": "Not Found",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 404,
              "title": "Not Found",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnauthorizedError": {
      "description": "Authentication information is missing or invalid",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 401,
              "title": "Authentication information is missing or invalid",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "UnknownError": {
      "description": "Unknown error",
      "properties": {
        "errors": {
          "items": {
            "example": {
              "detail": "",
              "status": 500,
              "title": "Unknown error",
            },
            "properties": {
              "detail": {
                "example": "Fatal issue",
                "nullable": true,
                "type": "string",
              },
              "status": {
                "example": 500,
                "format": "float",
                "type": "number",
              },
              "title": {
                "example": "Unknown error",
                "type": "string",
              },
            },
            "required": [
              "status",
              "detail",
              "title",
            ],
            "type": "object",
          },
          "type": "array",
        },
      },
      "type": "object",
    },
    "get testResult": {
      "properties": {
        "test": {
          "example": "get test",
          "type": "string",
        },
      },
      "type": "object",
    },
    "post testResult": {
      "properties": {
        "test": {
          "example": "post test",
          "type": "string",
        },
      },
      "type": "object",
    },
  },
  "host": "",
  "info": {
    "contact": {
      "email": "developers@shopbonsai.ca",
    },
    "description": "The API is documented here",
    "title": "Default swagger title",
    "version": "1.0",
  },
  "paths": {
    "/test": {
      "get": {
        "parameters": [
          {
            "example": "get test",
            "in": "query",
            "name": "test",
            "required": false,
            "type": "string",
          },
        ],
        "produces": [
          "application/json",
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/get testResult",
            },
          },
          "400": {
            "description": "400 - Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequestError",
            },
          },
          "401": {
            "description": "401 - Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError",
            },
          },
          "404": {
            "description": "404 - Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError",
            },
          },
          "5XX": {
            "description": "500 - Unknown error",
            "schema": {
              "$ref": "#/definitions/UnknownError",
            },
          },
        },
        "tags": [],
      },
      "post": {
        "parameters": [
          {
            "example": "post test",
            "in": "query",
            "name": "test",
            "required": false,
            "type": "string",
          },
        ],
        "produces": [
          "application/json",
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/post testResult",
            },
          },
          "400": {
            "description": "400 - Bad request",
            "schema": {
              "$ref": "#/definitions/BadRequestError",
            },
          },
          "401": {
            "description": "401 - Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedError",
            },
          },
          "404": {
            "description": "404 - Not found",
            "schema": {
              "$ref": "#/definitions/NotFoundError",
            },
          },
          "5XX": {
            "description": "500 - Unknown error",
            "schema": {
              "$ref": "#/definitions/UnknownError",
            },
          },
        },
        "tags": [],
      },
    },
  },
  "schemes": [
    "http",
  ],
  "swagger": "2.0",
}
`;
