import * as express from 'express';
import * as Joi from 'joi';

import { errorSchema, getSwagger, router } from '../src';
import { productSchema } from './mocks/product';

describe('Swagger generation', () => {
  describe('getSwagger', () => {
    it('Should return autogenerated default Swagger definition', () => {
      const swagger = getSwagger({
        version: '1.0.0',
        title: 'Test API',
        description: 'Test API description',
        servers: [{ url: 'https://myapi.org' }],
      });

      expect(swagger).toMatchSnapshot();
    });
  });

  describe('addRoute', () => {
    const app = express();

    it('Should succesfully generate swagger route', () => {
      router.use(app, '/products').post('/', {
        description: 'Create new product',
        tags: ['Products'],
        input: {
          body: productSchema,
        },
        output: {
          200: productSchema, // Direct schema - not wrapped as object
          400: {
            data: productSchema,
            error: errorSchema, // Single error
          },
          401: {
            data: productSchema,
            errors: Joi.array().items(errorSchema), // Array of errors
          },
        },
      });

      const swagger = getSwagger({
        version: '1.0.0',
        title: 'Test API',
        description: 'Test API description',
        servers: [{ url: 'https://myapi.org' }],
      });

      expect(swagger).toMatchSnapshot();
    });
  });
});
